public class Main {
    public static int foo(int x) {
        return (x * 10) + 42;
    }
    public static int factorial(int n) {
        int r = 1;
        while (n > 1) {
            r *= n;
            n -= 1;
        }
        return r;
    }
}

//public static int foo(int);
//Code:
//        0: iload_0         // Загружает значение x в стек
//     1: bipush 10       // Загружает константу 10 в стек
//        3: imul            // Умножает x на 10, результат в стеке
//     4: bipush 42       // Загружает константу 42 в стек
//        6: iadd            // Складывает результат умножения с 42, результат в стеке
//     7: ireturn         // Возвращает результат функции

//public static int factorial(int);
//Code:
//        0: iconst_1          // Загружает 1 в стек
//     1: istore_1          // Сохраняет 1 в переменной r
//
//     2: iload_0           // Загружает n в стек
//     3: iconst_1          // Загружает 1 в стек
//     4: if_icmple 20      // Переходит на 20, если n <= 1
//
//        7: iload_1           // Загружает r в стек
//     8: iload_0           // Загружает n в стек
//     9: imul              // Умножает r на n
//    10: istore_1          // Сохраняет результат умножения в r
//
//    11: iload_0           // Загружает n в стек
//    12: iconst_1          // Загружает 1 в стек
//    13: isub              // Вычитает 1 из n
//    14: istore_0          // Сохраняет результат в n
//
//    15: goto 2            // Переходит к началу цикла
//
//            20: iload_1           // Загружает r в стек
//    21: ireturn           // Возвращает значение r как результат

